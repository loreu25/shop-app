// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyMvcApp.Data;

#nullable disable

namespace MyMvcApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250430084705_AddStockToProduct")]
    partial class AddStockToProduct
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("MyMvcApp.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "iPhone 16 128 ГБ",
                            Image = "/images/1.jpg",
                            Price = 799.99m,
                            Stock = 0,
                            Title = "iPhone 16"
                        },
                        new
                        {
                            Id = 2,
                            Description = "iPhone 16e 128 ГБ",
                            Image = "/images/2.jpg",
                            Price = 599.99m,
                            Stock = 0,
                            Title = "iPhone 16e"
                        },
                        new
                        {
                            Id = 3,
                            Description = "iPhone 16 Pro 256 ГБ",
                            Image = "/images/3.jpg",
                            Price = 999.99m,
                            Stock = 0,
                            Title = "iPhone 16 Pro"
                        },
                        new
                        {
                            Id = 4,
                            Description = "iPhone 16 Pro Max 512 ГБ",
                            Image = "/images/4.jpg",
                            Price = 1199.99m,
                            Stock = 0,
                            Title = "iPhone 16 Pro Max"
                        },
                        new
                        {
                            Id = 5,
                            Description = "iPhone 15 128 ГБ",
                            Image = "/images/5.jpg",
                            Price = 699.99m,
                            Stock = 0,
                            Title = "iPhone 15"
                        },
                        new
                        {
                            Id = 6,
                            Description = "iPhone 15 Plus 256 ГБ",
                            Image = "/images/6.jpg",
                            Price = 799.99m,
                            Stock = 0,
                            Title = "iPhone 15 Plus"
                        },
                        new
                        {
                            Id = 7,
                            Description = "iPhone 15 Pro 512 ГБ",
                            Image = "/images/7.jpg",
                            Price = 899.99m,
                            Stock = 0,
                            Title = "iPhone 15 Pro"
                        },
                        new
                        {
                            Id = 8,
                            Description = "iPhone 14 128 ГБ",
                            Image = "/images/8.jpg",
                            Price = 599.99m,
                            Stock = 0,
                            Title = "iPhone 14"
                        });
                });

            modelBuilder.Entity("MyMvcApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@example.com",
                            PasswordHash = "$2a$11$RMd91092xos7W1fW2Njbsekd3wOugwkSGNE7XbKATkRx0GzXp0KqO",
                            Role = "admin",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "customer@example.com",
                            PasswordHash = "$2a$11$3IG4DPsuSYt799kRntnFPOAo9WENM/NsALVX2EqEupyKL3G7ao/KS",
                            Role = "customer",
                            Username = "customer"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
